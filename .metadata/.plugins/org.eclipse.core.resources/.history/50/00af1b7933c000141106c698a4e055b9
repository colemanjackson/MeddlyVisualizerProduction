package logic;

import info.ForestInfo;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import javafx.scene.chart.XYChart.Series;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import com.sun.org.apache.xerces.internal.impl.xpath.regex.ParseException;

public class ForestInfoParser {
	private ForestInfo forestInfo;
	private JSONObject currentLeaf;
	public ForestInfoParser() {
	}

	public int updateActiveNode(Series series, ForestInfo info) {
		return 0;
	}

	public static void readJsonFile()
			throws org.json.simple.parser.ParseException {
		boolean firstTime = true;
		BufferedReader br = null;
		JSONParser parser = new JSONParser();

		try {

			String sCurrentLine;

			br = new BufferedReader(new InputStreamReader(System.in));

			while ((sCurrentLine = br.readLine()) != null) {
				System.out.println("Record:\t" + sCurrentLine);
				
				Object obj;
				JSONObject jsonObject = new JSONObject();
				try {

					obj = parser.parse(sCurrentLine);
					jsonObject = (JSONObject) obj;
					Long rel = (Long) jsonObject.get("f");
					System.out.println(rel);

					Long start = (Long) jsonObject.get("l");
					System.out.println(start);

					Long end = (Long) jsonObject.get("anc");
					System.out.println(end);
				}

				catch (ParseException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
			}

		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if (br != null)
					br.close();
			} catch (IOException ex) {
				ex.printStackTrace();
			}
		}
	}
}
