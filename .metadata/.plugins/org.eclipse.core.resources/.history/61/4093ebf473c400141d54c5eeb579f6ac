package logic;

import info.ForestInfo;
import info.LeafInfo;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;

import javafx.scene.chart.XYChart;
import javafx.scene.chart.XYChart.Series;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

import com.sun.org.apache.xerces.internal.impl.xpath.regex.ParseException;

public class ForestInfoParser {
	private static ForestInfo forestInfo = null;
	private static BufferedReader br = null;
	private static JSONParser parser = null;

	public ForestInfoParser() throws FileNotFoundException {
		this.br = new BufferedReader(new InputStreamReader(System.in));
		this.parser = new JSONParser();

	}

	public static Series initalizeForestInfoFromJsonFile() throws IOException {
		try {
			String stringOfForestInfo = br.readLine();
			System.out.println("Record:\t" + stringOfForestInfo);

			Object obj;
			JSONObject jsonObject = new JSONObject();
			obj = parser.parse(stringOfForestInfo);
			jsonObject = (JSONObject) obj;
			forestInfo = new ForestInfo(jsonObject);
			return forestInfo.getSeries();

		} catch (Exception e) {
			if (br != null)
				br.close();
			e.printStackTrace();
		}
		return null;
	}

	public static LeafInfo readNodeInfoFromJsonFile()
			throws org.json.simple.parser.ParseException, IOException {
		LeafInfo info = new LeafInfo();
		
		try {

			String sCurrentLine;
			while ((sCurrentLine = br.readLine()) != null) {
				System.out.println("Record:\t" + sCurrentLine);
				Object obj;
				JSONObject jsonObject = new JSONObject();
				obj = parser.parse(sCurrentLine);
				jsonObject = (JSONObject) obj;
				if (jsonObject.get("f") != null) {
					Long id = (Long) jsonObject.get("f");
					System.out.println(id);
					Long level = (Long) jsonObject.get("l");
					System.out.println(level);
					Long anc = (Long) jsonObject.get("anc");
					System.out.println(anc);
					info.addAnc(anc);
					info.addLevel(level);
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		br.close();
		return info;
	}

	public ForestInfo getForestInfo() {
		return forestInfo;
	}
}