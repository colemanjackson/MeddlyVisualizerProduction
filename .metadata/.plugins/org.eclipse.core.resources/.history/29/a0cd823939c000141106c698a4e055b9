package logic;

import info.ForestInfo;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import javafx.scene.chart.XYChart.Series;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import com.sun.org.apache.xerces.internal.impl.xpath.regex.ParseException;

public class ForestInfoParser {
	private static ForestInfo forestInfo = null;
	private static BufferedReader br = null;

	public ForestInfoParser() {
		//TODO:Add Filestream abilities to buffered Reader
		br = new BufferedReader(new InputStreamReader(System.in));
	}
	
	public static void initalizeForestInfoFromJsonFile() throws IOException{
		try {
			br.readLine();
		} catch (IOException e) {
			if(br!= null) br.close();
			e.printStackTrace();
		}
	}

	public static void readNodeInfoFromJsonFile(Series series)
			throws org.json.simple.parser.ParseException {
		
		JSONParser parser = new JSONParser();

		try {

			String sCurrentLine;
			while ((sCurrentLine = br.readLine()) != null) {
				System.out.println("Record:\t" + sCurrentLine);

				Object obj;
				JSONObject jsonObject = new JSONObject();
				try {

					obj = parser.parse(sCurrentLine);
					jsonObject = (JSONObject) obj;

					// Means this is the first object being parsed, so
					// initialize forestInfo, and continue parsing the following
					// lines
					if (jsonObject.get("forest_id") != null) {
						forestInfo = new ForestInfo(jsonObject);
						continue;
					}

					// means we are past intial forest object, and these are
					// leaves now being parsed from the stream. update the
					// series.

					if (jsonObject.get("f") != null) {

						int rel = (int) jsonObject.get("f");
						System.out.println(rel);

						Long start = (Long) jsonObject.get("l");
						System.out.println(start);

						Long end = (Long) jsonObject.get("anc");
						System.out.println(end);
					}
				}

				catch (ParseException e) {
					// TODO Auto-generated catch block
					if (br != null)
						br.close();
					e.printStackTrace();
				} catch (Exception ei) {
					if (br != null)
						br.close();
					ei.printStackTrace();
				}
			}

		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			try {
				if (br != null)
					br.close();
			} catch (IOException ex) {
				ex.printStackTrace();
			}
		}
	}
}
